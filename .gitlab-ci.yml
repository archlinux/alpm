variables:
  RUST_BACKTRACE: full

stages:
  - check
  - test
  - publish
  - report
  - pages

check-commits:
  before_script:
    - pacman-key --init
    - pacman -Sy --needed --noconfirm archlinux-keyring
    - source .env && pacman -Syu --needed --noconfirm $PACMAN_PACKAGES
    # fetch the default branch as we need it for comparison
    - git fetch origin $CI_DEFAULT_BRANCH
    # setup a dummy user as `cog verify` needs that
    - git config --local user.name "Foobar McFooface"
    - git config --local user.email "foobar@mcfooface.com"
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - just check-commits
  stage: check

check:
  before_script:
    - pacman-key --init
    - pacman -Sy --needed --noconfirm archlinux-keyring
    - source .env && pacman -Syu --needed --noconfirm $PACMAN_PACKAGES
    - just install-rust-dev-tools
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - just check
  stage: check

test:
  before_script:
    - pacman-key --init
    - pacman -Sy --needed --noconfirm archlinux-keyring
    - source .env && pacman -Syu --needed --noconfirm $PACMAN_PACKAGES
    - just install-rust-dev-tools
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - just test
    - just build-book
    - just test-readme alpm-pkginfo
    - just test-readme alpm-buildinfo
  stage: test

integration-test:
  before_script:
    - pacman-key --init
    - pacman -Sy --needed --noconfirm archlinux-keyring
    - source .env && pacman -Syu --needed --noconfirm $PACMAN_PACKAGES
    - just install-rust-dev-tools
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - just ignored=true test
  stage: test

crates_publish:
  before_script:
    - pacman-key --init
    - pacman -Sy --needed --noconfirm archlinux-keyring
    - source .env && pacman -Syu --needed --noconfirm $PACMAN_PACKAGES
    - just install-rust-dev-tools
  dependencies: []
  rules:
    - if: '$CARGO_REGISTRY_TOKEN && $CI_COMMIT_TAG && $CI_PROJECT_PATH == "archlinux/alpm/alpm"'
  script:
    - just ci-publish
  stage: publish
  tags:
    - secure

issue-bot:
  stage: report
  image: registry.gitlab.com/gitlab-org/distribution/issue-bot:latest
  script: /issue-bot
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      when: on_failure

pages:
  before_script:
    - pacman-key --init
    - pacman -Sy --needed --noconfirm archlinux-keyring
    - source .env && pacman -Syu --needed --noconfirm $PACMAN_PACKAGES
    - just install-rust-dev-tools
  stage: pages
  script:
    - just build-book
  artifacts:
    paths:
      - output/docs
  publish: output/docs
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
